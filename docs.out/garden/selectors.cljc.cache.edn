;; Analyzed by ClojureScript 1.7.145
{:use-macros {gen-pseudo-class-defs garden.selectors, gen-type-selector-defs garden.selectors, defpseudoclass garden.selectors, defselector garden.selectors, defpseudoelement garden.selectors, defid garden.selectors}, :excludes #{first map meta > - time not empty +}, :name garden.selectors, :imports nil, :requires {string clojure.string, clojure.string clojure.string}, :uses nil, :defs {->CSSSelector {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 306, :column 15, :end-line 306, :end-column 26, :internal-ctor true, :factory :positional, :arglists (quote ([selector]))}, :name garden.selectors/->CSSSelector, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 26, :method-params ([selector]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :internal-ctor true, :factory :positional, :line 306, :end-line 306, :max-fixed-arity 1, :fn-var true, :arglists (quote ([selector]))}, form {:name garden.selectors/form, :doc "CSS form type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS form type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, audio {:name garden.selectors/audio, :doc "CSS audio type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS audio type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, & {:name garden.selectors/&, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 1001, :column 1, :end-line 1003, :end-column 4, :doc "Parent selector.", :arglists (quote ([& selectors])), :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 1003, :column 3, :end-line 1003, :end-column 4, :doc "Parent selector.", :arglists (quote ([& selectors]))}}, input {:name garden.selectors/input, :doc "CSS input type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS input type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, target {:name garden.selectors/target, :doc "CSS :target pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :target pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, hgroup {:name garden.selectors/hgroup, :doc "CSS hgroup type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS hgroup type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, base {:name garden.selectors/base, :doc "CSS base type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS base type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, h1 {:name garden.selectors/h1, :doc "CSS h1 type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS h1 type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, attr-contains {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 945, :column 7, :end-line 945, :end-column 20, :arglists (quote ([attr-name attr-value]))}, :name garden.selectors/attr-contains, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 20, :method-params ([attr-name attr-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 945, :end-line 945, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attr-name attr-value]))}, first {:name garden.selectors/first, :doc "CSS :first pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :first pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, read-only {:name garden.selectors/read-only, :doc "CSS :read-only pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :read-only pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, embed {:name garden.selectors/embed, :doc "CSS embed type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS embed type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, specificity {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 1042, :column 7, :end-line 1042, :end-column 18, :arglists (quote ([selector])), :doc "Calculate a CSS3 selector's specificity.\n  \n  Example:\n\n    (specificity \"#s12:not(FOO)\")\n    ;; => 101\n    (specificity (a hover))\n    ;; => 10\n  "}, :name garden.selectors/specificity, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 18, :method-params ([selector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1042, :end-line 1042, :max-fixed-arity 1, :fn-var true, :arglists (quote ([selector])), :doc "Calculate a CSS3 selector's specificity.\n  \n  Example:\n\n    (specificity \"#s12:not(FOO)\")\n    ;; => 101\n    (specificity (a hover))\n    ;; => 10\n  "}, h3 {:name garden.selectors/h3, :doc "CSS h3 type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS h3 type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, body {:name garden.selectors/body, :doc "CSS body type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS body type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, keygen {:name garden.selectors/keygen, :doc "CSS keygen type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS keygen type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, progress {:name garden.selectors/progress, :doc "CSS progress type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS progress type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, first-of-type {:name garden.selectors/first-of-type, :doc "CSS :first-of-type pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :first-of-type pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, cite {:name garden.selectors/cite, :doc "CSS cite type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS cite type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, enabled {:name garden.selectors/enabled, :doc "CSS :enabled pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :enabled pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, before {:name garden.selectors/before, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 913, :column 1, :end-line 915, :end-column 9, :doc "CSS ::before pseudo element selector.", :arglists (quote ([& selectors])), :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 915, :column 3, :end-line 915, :end-column 9, :doc "CSS ::before pseudo element selector.", :arglists (quote ([& selectors]))}}, nth-child-re {:name garden.selectors/nth-child-re, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 864, :column 1, :end-line 864, :end-column 18, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 864, :column 6, :end-line 864, :end-column 18}}, map {:name garden.selectors/map, :doc "CSS map type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS map type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, object {:name garden.selectors/object, :doc "CSS object type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS object type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, i {:name garden.selectors/i, :doc "CSS i type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS i type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, lex-specificity {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 1010, :column 8, :end-line 1010, :end-column 23, :private true, :arglists (quote ([s]))}, :private true, :name garden.selectors/lex-specificity, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 23, :method-params ([s]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1010, :end-line 1010, :max-fixed-arity 1, :fn-var true, :arglists (quote ([s]))}, math {:name garden.selectors/math, :doc "CSS math type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS math type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, p {:name garden.selectors/p, :doc "CSS p type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS p type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, nav {:name garden.selectors/nav, :doc "CSS nav type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS nav type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, ruby {:name garden.selectors/ruby, :doc "CSS ruby type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS ruby type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, out-of-range {:name garden.selectors/out-of-range, :doc "CSS :out-of-range pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :out-of-range pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, a {:name garden.selectors/a, :doc "CSS a type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS a type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, attr= {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 942, :column 7, :end-line 942, :end-column 12, :arglists (quote ([attr-name attr-value]))}, :name garden.selectors/attr=, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 12, :method-params ([attr-name attr-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 942, :end-line 942, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attr-name attr-value]))}, menu {:name garden.selectors/menu, :doc "CSS menu type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS menu type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, blockquote {:name garden.selectors/blockquote, :doc "CSS blockquote type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS blockquote type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, required {:name garden.selectors/required, :doc "CSS :required pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :required pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, img {:name garden.selectors/img, :doc "CSS img type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS img type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, span {:name garden.selectors/span, :doc "CSS span type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS span type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, track {:name garden.selectors/track, :doc "CSS track type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS track type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, u {:name garden.selectors/u, :doc "CSS u type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS u type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, attr {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 930, :column 7, :end-line 930, :end-column 11, :arglists (quote ([attr-name] [attr-name op attr-value])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([attr-name] [attr-name op attr-value]), :arglists ([attr-name] [attr-name op attr-value]), :arglists-meta (nil nil)}}, :name garden.selectors/attr, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([attr-name] [attr-name op attr-value]), :arglists ([attr-name] [attr-name op attr-value]), :arglists-meta (nil nil)}, :method-params ([attr-name] [attr-name op attr-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 930, :end-line 930, :max-fixed-arity 3, :fn-var true, :arglists ([attr-name] [attr-name op attr-value])}, dl {:name garden.selectors/dl, :doc "CSS dl type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS dl type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, select {:name garden.selectors/select, :doc "CSS select type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS select type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, left {:name garden.selectors/left, :doc "CSS :left pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :left pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, html {:name garden.selectors/html, :doc "CSS html type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS html type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, thead {:name garden.selectors/thead, :doc "CSS thead type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS thead type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, del {:name garden.selectors/del, :doc "CSS del type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS del type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, html-tags {:name garden.selectors/html-tags, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 682, :column 1, :end-line 682, :end-column 25, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 682, :column 16, :end-line 682, :end-column 25, :private true}}, attr-starts-with* {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 952, :column 7, :end-line 952, :end-column 24, :arglists (quote ([attr-name attr-value]))}, :name garden.selectors/attr-starts-with*, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 24, :method-params ([attr-name attr-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 952, :end-line 952, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attr-name attr-value]))}, fieldset {:name garden.selectors/fieldset, :doc "CSS fieldset type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS fieldset type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, valid {:name garden.selectors/valid, :doc "CSS :valid pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :valid pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, nth-child {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 886, :column 3, :end-line 886, :end-column 12, :doc "CSS :nth-child pseudo class selector.", :arglists (quote ([x]))}, :name garden.selectors/nth-child, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 12, :method-params ([args__14400__auto__]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 884, :end-line 886, :max-fixed-arity 0, :fn-var true, :arglists (quote ([x])), :doc "CSS :nth-child pseudo class selector."}, only-child {:name garden.selectors/only-child, :doc "CSS :only-child pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :only-child pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, aside {:name garden.selectors/aside, :doc "CSS aside type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS aside type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, figure {:name garden.selectors/figure, :doc "CSS figure type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS figure type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, nth-of-type {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 898, :column 3, :end-line 898, :end-column 14, :doc "CSS :nth-of-type pseudo class selector.", :arglists (quote ([x]))}, :name garden.selectors/nth-of-type, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 14, :method-params ([args__14400__auto__]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 896, :end-line 898, :max-fixed-arity 0, :fn-var true, :arglists (quote ([x])), :doc "CSS :nth-of-type pseudo class selector."}, first-line {:name garden.selectors/first-line, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 921, :column 1, :end-line 923, :end-column 13, :doc "CSS ::first-line pseudo element selector.", :arglists (quote ([& selectors])), :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 923, :column 3, :end-line 923, :end-column 13, :doc "CSS ::first-line pseudo element selector.", :arglists (quote ([& selectors]))}}, figcaption {:name garden.selectors/figcaption, :doc "CSS figcaption type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS figcaption type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, q {:name garden.selectors/q, :doc "CSS q type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS q type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, selector? {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 26, :column 7, :end-line 26, :end-column 16, :arglists (quote ([x]))}, :name garden.selectors/selector?, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, bdi {:name garden.selectors/bdi, :doc "CSS bdi type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS bdi type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, first-child {:name garden.selectors/first-child, :doc "CSS :first-child pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :first-child pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, video {:name garden.selectors/video, :doc "CSS video type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS video type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, selector {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 566, :column 7, :end-line 566, :end-column 15, :arglists (quote ([x]))}, :name garden.selectors/selector, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 566, :end-line 566, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, address {:name garden.selectors/address, :doc "CSS address type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS address type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, caption {:name garden.selectors/caption, :doc "CSS caption type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS caption type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, read-write {:name garden.selectors/read-write, :doc "CSS :read-write pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :read-write pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, specificity* {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 1028, :column 8, :end-line 1028, :end-column 20, :private true, :arglists (quote ([selector]))}, :private true, :name garden.selectors/specificity*, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 20, :method-params ([selector]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 1028, :end-line 1028, :max-fixed-arity 1, :fn-var true, :arglists (quote ([selector]))}, dd {:name garden.selectors/dd, :doc "CSS dd type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS dd type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, rp {:name garden.selectors/rp, :doc "CSS rp type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS rp type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, attr-matches {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 958, :column 7, :end-line 958, :end-column 19, :arglists (quote ([attr-name attr-value]))}, :name garden.selectors/attr-matches, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 19, :method-params ([attr-name attr-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 958, :end-line 958, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attr-name attr-value]))}, attr-ends-with {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 955, :column 7, :end-line 955, :end-column 21, :arglists (quote ([attr-name attr-value]))}, :name garden.selectors/attr-ends-with, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 21, :method-params ([attr-name attr-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 955, :end-line 955, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attr-name attr-value]))}, hr {:name garden.selectors/hr, :doc "CSS hr type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS hr type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, meta {:name garden.selectors/meta, :doc "CSS meta type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS meta type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, tbody {:name garden.selectors/tbody, :doc "CSS tbody type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS tbody type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, table {:name garden.selectors/table, :doc "CSS table type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS table type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, pre {:name garden.selectors/pre, :doc "CSS pre type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS pre type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, ul {:name garden.selectors/ul, :doc "CSS ul type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS ul type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, nth-last-child {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 893, :column 3, :end-line 893, :end-column 17, :doc "CSS :nth-last-child pseudo class selector.", :arglists (quote ([x]))}, :name garden.selectors/nth-last-child, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 17, :method-params ([args__14400__auto__]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 891, :end-line 893, :max-fixed-arity 0, :fn-var true, :arglists (quote ([x])), :doc "CSS :nth-last-child pseudo class selector."}, > {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 986, :column 7, :end-line 986, :end-column 8, :arglists (quote ([a] [a b] [a b & more])), :doc "Child combinator.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}}, :name garden.selectors/>, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 8, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a] [a b]), :arglists ([a] [a b] [a b & more]), :arglists-meta (nil nil nil)}, :method-params ([a] [a b]), :protocol-impl nil, :arglists-meta (nil nil nil), :column 1, :line 986, :end-line 986, :max-fixed-arity 2, :fn-var true, :arglists ([a] [a b] [a b & more]), :doc "Child combinator."}, disabled {:name garden.selectors/disabled, :doc "CSS :disabled pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :disabled pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, sup {:name garden.selectors/sup, :doc "CSS sup type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS sup type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, dfn {:name garden.selectors/dfn, :doc "CSS dfn type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS dfn type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, sub {:name garden.selectors/sub, :doc "CSS sub type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS sub type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, mark {:name garden.selectors/mark, :doc "CSS mark type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS mark type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, only-of-type {:name garden.selectors/only-of-type, :doc "CSS :only-of-type pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :only-of-type pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, script {:name garden.selectors/script, :doc "CSS script type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS script type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, button {:name garden.selectors/button, :doc "CSS button type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS button type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, CSSSelector {:num-fields 1, :protocols #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IIterable garden.selectors/ICSSSelector cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}, :name garden.selectors/CSSSelector, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 26, :type true, :column 15, :internal-ctor true, :line 306, :record true, :end-line 306, :skip-protocol-flag #{cljs.core/IRecord cljs.core/IEquiv cljs.core/IHash cljs.core/IFn cljs.core/ICollection cljs.core/ICounted cljs.core/ISeqable cljs.core/IMeta cljs.core/ICloneable cljs.core/IPrintWithWriter cljs.core/IWithMeta cljs.core/IAssociative cljs.core/IMap cljs.core/ILookup}}, wbr {:name garden.selectors/wbr, :doc "CSS wbr type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS wbr type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, attr-starts-with {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 948, :column 7, :end-line 948, :end-column 23, :arglists (quote ([attr-name attr-value]))}, :name garden.selectors/attr-starts-with, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 23, :method-params ([attr-name attr-value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 948, :end-line 948, :max-fixed-arity 2, :fn-var true, :arglists (quote ([attr-name attr-value]))}, strong {:name garden.selectors/strong, :doc "CSS strong type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS strong type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, default {:name garden.selectors/default, :doc "CSS :default pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :default pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, li {:name garden.selectors/li, :doc "CSS li type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS li type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, dt {:name garden.selectors/dt, :doc "CSS dt type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS dt type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, - {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 981, :column 7, :end-line 981, :end-column 8, :arglists (quote ([a b])), :doc "General sibling combinator."}, :name garden.selectors/-, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 8, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 981, :end-line 981, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b])), :doc "General sibling combinator."}, td {:name garden.selectors/td, :doc "CSS td type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS td type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, tr {:name garden.selectors/tr, :doc "CSS tr type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS tr type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, section {:name garden.selectors/section, :doc "CSS section type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS section type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, th {:name garden.selectors/th, :doc "CSS th type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS th type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, time {:name garden.selectors/time, :doc "CSS time type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS time type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, optgroup {:name garden.selectors/optgroup, :doc "CSS optgroup type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS optgroup type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, descendant {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 966, :column 7, :end-line 966, :end-column 17, :arglists (quote ([a b] [a b & more])), :doc "Descendant combinator.", :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a b]), :arglists ([a b] [a b & more]), :arglists-meta (nil nil)}}, :name garden.selectors/descendant, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 2, :method-params ([a b]), :arglists ([a b] [a b & more]), :arglists-meta (nil nil)}, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 966, :end-line 966, :max-fixed-arity 2, :fn-var true, :arglists ([a b] [a b & more]), :doc "Descendant combinator."}, iframe {:name garden.selectors/iframe, :doc "CSS iframe type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS iframe type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, legend {:name garden.selectors/legend, :doc "CSS legend type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS legend type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, em {:name garden.selectors/em, :doc "CSS em type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS em type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, map->CSSSelector {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 306, :column 15, :end-line 306, :end-column 26, :internal-ctor true, :factory :map, :arglists (quote ([G__23787]))}, :name garden.selectors/map->CSSSelector, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 26, :method-params ([G__23787]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :internal-ctor true, :factory :map, :line 306, :end-line 306, :max-fixed-arity 1, :fn-var true, :arglists (quote ([G__23787]))}, kbd {:name garden.selectors/kbd, :doc "CSS kbd type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS kbd type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, ICSSSelector {:meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 23, :column 14, :end-line 23, :end-column 26, :doc nil, :protocol-symbol true, :jsdoc ("@interface"), :protocol-info {:methods {css-selector [[this]]}}}, :protocol-symbol true, :name garden.selectors/ICSSSelector, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 26, :column 1, :line 23, :protocol-info {:methods {css-selector [[this]]}}, :info nil, :end-line 23, :impls #{cljs.core/Keyword garden.selectors/CSSSelector string cljs.core/Symbol}, :doc nil, :jsdoc ("@interface")}, article {:name garden.selectors/article, :doc "CSS article type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS article type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, abbr {:name garden.selectors/abbr, :doc "CSS abbr type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS abbr type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, last-of-type {:name garden.selectors/last-of-type, :doc "CSS :last-of-type pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :last-of-type pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, invalid {:name garden.selectors/invalid, :doc "CSS :invalid pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :invalid pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, command {:name garden.selectors/command, :doc "CSS command type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS command type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, not {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 860, :column 17, :end-line 860, :end-column 20, :arglists (quote ([selector]))}, :name garden.selectors/not, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 20, :method-params ([args__14400__auto__]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 860, :end-line 860, :max-fixed-arity 0, :fn-var true, :arglists (quote ([selector]))}, visited {:name garden.selectors/visited, :doc "CSS :visited pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :visited pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, source {:name garden.selectors/source, :doc "CSS source type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS source type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, output {:name garden.selectors/output, :doc "CSS output type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS output type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, nth-x {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 871, :column 7, :end-line 871, :end-column 12, :arglists (quote ([x])), :doc "nth-child helper."}, :name garden.selectors/nth-x, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 12, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 871, :end-line 871, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "nth-child helper."}, header {:name garden.selectors/header, :doc "CSS header type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS header type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, datalist {:name garden.selectors/datalist, :doc "CSS datalist type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS datalist type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, tfoot {:name garden.selectors/tfoot, :doc "CSS tfoot type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS tfoot type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, s {:name garden.selectors/s, :doc "CSS s type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS s type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, empty {:name garden.selectors/empty, :doc "CSS :empty pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :empty pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, scope {:name garden.selectors/scope, :doc "CSS :scope pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :scope pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, ins {:name garden.selectors/ins, :doc "CSS ins type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS ins type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, footer {:name garden.selectors/footer, :doc "CSS footer type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS footer type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, nth-last-of-type {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 903, :column 3, :end-line 903, :end-column 19, :doc "CSS :nth-last-of-type pseudo class selector.", :arglists (quote ([x]))}, :name garden.selectors/nth-last-of-type, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 19, :method-params ([args__14400__auto__]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 901, :end-line 903, :max-fixed-arity 0, :fn-var true, :arglists (quote ([x])), :doc "CSS :nth-last-of-type pseudo class selector."}, title {:name garden.selectors/title, :doc "CSS title type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS title type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, h5 {:name garden.selectors/h5, :doc "CSS h5 type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS h5 type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, canvas {:name garden.selectors/canvas, :doc "CSS canvas type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS canvas type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, param {:name garden.selectors/param, :doc "CSS param type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS param type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, lang {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 857, :column 17, :end-line 857, :end-column 21, :arglists (quote ([language]))}, :name garden.selectors/lang, :variadic true, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 21, :method-params ([args__14400__auto__]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 857, :end-line 857, :max-fixed-arity 0, :fn-var true, :arglists (quote ([language]))}, div {:name garden.selectors/div, :doc "CSS div type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS div type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, option {:name garden.selectors/option, :doc "CSS option type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS option type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, summary {:name garden.selectors/summary, :doc "CSS summary type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS summary type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, samp {:name garden.selectors/samp, :doc "CSS samp type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS samp type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, small {:name garden.selectors/small, :doc "CSS small type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS small type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, style {:name garden.selectors/style, :doc "CSS style type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS style type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, textarea {:name garden.selectors/textarea, :doc "CSS textarea type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS textarea type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, indeterminate {:name garden.selectors/indeterminate, :doc "CSS :indeterminate pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :indeterminate pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, hover {:name garden.selectors/hover, :doc "CSS :hover pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :hover pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, h4 {:name garden.selectors/h4, :doc "CSS h4 type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS h4 type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, in-range {:name garden.selectors/in-range, :doc "CSS :in-range pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :in-range pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, css-selector {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 24, :column 4, :end-line 24, :end-column 16, :protocol garden.selectors/ICSSSelector, :doc nil, :arglists (quote ([this]))}, :protocol garden.selectors/ICSSSelector, :name garden.selectors/css-selector, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 16, :method-params ([this]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 23, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([this])), :doc nil}, head {:name garden.selectors/head, :doc "CSS head type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS head type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, after {:name garden.selectors/after, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 909, :column 1, :end-line 911, :end-column 8, :doc "CSS ::after pseudo element selector.", :arglists (quote ([& selectors])), :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 911, :column 3, :end-line 911, :end-column 8, :doc "CSS ::after pseudo element selector.", :arglists (quote ([& selectors]))}}, pseudo-classes {:name garden.selectors/pseudo-classes, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 807, :column 1, :end-line 807, :end-column 30, :private true, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 807, :column 16, :end-line 807, :end-column 30, :private true}}, fullscreen {:name garden.selectors/fullscreen, :doc "CSS :fullscreen pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :fullscreen pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, + {:protocol-inline nil, :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 976, :column 7, :end-line 976, :end-column 8, :arglists (quote ([a b])), :doc "Adjacent sibling combinator."}, :name garden.selectors/+, :variadic false, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :end-column 8, :method-params ([a b]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 976, :end-line 976, :max-fixed-arity 2, :fn-var true, :arglists (quote ([a b])), :doc "Adjacent sibling combinator."}, var {:name garden.selectors/var, :doc "CSS var type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS var type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, root {:name garden.selectors/root, :doc "CSS :root pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :root pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, ol {:name garden.selectors/ol, :doc "CSS ol type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS ol type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, details {:name garden.selectors/details, :doc "CSS details type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS details type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, active {:name garden.selectors/active, :doc "CSS :active pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :active pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, col {:name garden.selectors/col, :doc "CSS col type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS col type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, label {:name garden.selectors/label, :doc "CSS label type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS label type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, rt {:name garden.selectors/rt, :doc "CSS rt type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS rt type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, h6 {:name garden.selectors/h6, :doc "CSS h6 type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS h6 type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, link {:name garden.selectors/link, :doc "CSS :link pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :link pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, checked {:name garden.selectors/checked, :doc "CSS :checked pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :checked pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, last-child {:name garden.selectors/last-child, :doc "CSS :last-child pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :last-child pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, optional {:name garden.selectors/optional, :doc "CSS :optional pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :optional pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, colgroup {:name garden.selectors/colgroup, :doc "CSS colgroup type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS colgroup type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, meter {:name garden.selectors/meter, :doc "CSS meter type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS meter type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, bdo {:name garden.selectors/bdo, :doc "CSS bdo type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS bdo type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, b {:name garden.selectors/b, :doc "CSS b type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS b type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, svg {:name garden.selectors/svg, :doc "CSS svg type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS svg type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, code {:name garden.selectors/code, :doc "CSS code type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS code type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, right {:name garden.selectors/right, :doc "CSS :right pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :right pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, focus {:name garden.selectors/focus, :doc "CSS :focus pseudo-class selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS :focus pseudo-class selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 852, :column 1}, noscript {:name garden.selectors/noscript, :doc "CSS noscript type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS noscript type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, first-letter {:name garden.selectors/first-letter, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 917, :column 1, :end-line 919, :end-column 15, :doc "CSS ::first-letter pseudo element selector.", :arglists (quote ([& selectors])), :meta {:file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 919, :column 3, :end-line 919, :end-column 15, :doc "CSS ::first-letter pseudo element selector.", :arglists (quote ([& selectors]))}}, h2 {:name garden.selectors/h2, :doc "CSS h2 type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS h2 type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, area {:name garden.selectors/area, :doc "CSS area type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS area type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}, br {:name garden.selectors/br, :doc "CSS br type selector.", :arglists (quote ([& selectors])), :meta {:doc "CSS br type selector.", :arglists (quote ([& selectors])), :file nil}, :file "/home/jannis/.boot/cache/tmp/home/jannis/oss/om-mantras/93p/-293pcu/docs.out/garden/selectors.cljc", :line 802, :column 1}}, :require-macros {garden.selectors garden.selectors}, :cljs.analyzer/constants {:seen #{form audio input target hgroup x base h1 satisfies? first read-only embed :selector h3 body keygen progress first-of-type cite enabled map object i math p nav ruby out-of-range a menu blockquote required img span track u dl select left html thead del fieldset valid only-child aside figure figcaption q bdi first-child video selector address caption read-write dd rp hr meta tbody table pre string? ul disabled keyword? sup dfn sub mark only-of-type script button wbr strong default li dt or td tr section th time :c optgroup iframe legend em kbd ICSSSelector article abbr last-of-type invalid command visited source output header datalist tfoot s empty scope ins footer title h5 :b canvas param div option summary samp small style textarea indeterminate hover h4 in-range head fullscreen var root ol details active col label rt h6 link checked last-child optional colgroup meter bdo b svg code right focus noscript :a h2 area br symbol?}, :order [:selector selector a abbr address area article aside audio b base bdi bdo blockquote body br button canvas caption cite code col colgroup command datalist dd del details dfn div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 head header hgroup hr html i iframe img input ins kbd keygen label legend li link map mark math menu meta meter nav noscript object ol optgroup option output p param pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup svg table tbody td textarea tfoot th thead time title tr track u ul var video wbr active checked default disabled empty enabled first first-child first-of-type fullscreen focus hover indeterminate in-range invalid last-child last-of-type left only-child only-of-type optional out-of-range read-only read-write required right root scope target valid visited or string? x keyword? symbol? :a :b :c satisfies? ICSSSelector]}, :doc "Macros and functions for working with CSS selectors."}